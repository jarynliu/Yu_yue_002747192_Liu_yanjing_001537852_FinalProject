/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UserPage;

import SignUpPage.UserSignPage;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import Tool.JTextFieldHintListener;
import com.mysql.cj.jdbc.result.ResultSetMetaData;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author iris
 */
public class UserRecipe extends javax.swing.JFrame {

    /**
     * Creates new form UploadRecipe
     */
    public UserRecipe() {
        initComponents();
        Connect();
        recipe_table ();
    }
    
    public UserRecipe(int id, String name, String role) {
        initComponents();
    }
    
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    
    
    public void Connect() 
    {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/petcommunity", "root", "");           
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UserSignPage.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(UserSignPage.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    public void recipe_table ()
    {
        try {
            pst = con.prepareStatement("select * from recipe");
            rs = pst.executeQuery();
        
            ResultSetMetaData Rsm = (ResultSetMetaData)rs.getMetaData();
            int c;
             c = Rsm.getColumnCount();
            
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            
            while(rs.next()) 
            {
                Vector v2 = new Vector();
                
                for(int i = 1; i <= c; i++) 
                
                {
                    v2.add(rs.getString("recipeno"));
                    v2.add(rs.getString("pname"));
                    v2.add(rs.getString("page"));
                    v2.add(rs.getString("ptype"));
                    v2.add(rs.getString("meat"));
                    v2.add(rs.getString("bone"));
                    v2.add(rs.getString("liver"));
                    v2.add(rs.getString("organ"));
                    v2.add(rs.getString("veg"));
                    v2.add(rs.getString("seed"));
                    v2.add(rs.getString("fruit"));
                    v2.add(rs.getString("supplement"));
                    v2.add(rs.getString("org1_comment"));
                    v2.add(rs.getString("org2_comment"));
 
                }
                
                model.addRow(v2);
            
            
            
            
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(UserRecipe.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblpname = new javax.swing.JLabel();
        lblage = new javax.swing.JLabel();
        lblptype = new javax.swing.JLabel();
        lblmeat = new javax.swing.JLabel();
        lblbone = new javax.swing.JLabel();
        lblliver = new javax.swing.JLabel();
        lblorgan = new javax.swing.JLabel();
        lblveg = new javax.swing.JLabel();
        lblseed = new javax.swing.JLabel();
        lblfruit = new javax.swing.JLabel();
        txtpname = new javax.swing.JTextField();
        txtage = new javax.swing.JTextField();
        txtmeat = new javax.swing.JTextField();
        txtbone = new javax.swing.JTextField();
        txtliver = new javax.swing.JTextField();
        txtorgan = new javax.swing.JTextField();
        txtveg = new javax.swing.JTextField();
        txtseed = new javax.swing.JTextField();
        txtfruit = new javax.swing.JTextField();
        rdbdog = new javax.swing.JRadioButton();
        rdbcat = new javax.swing.JRadioButton();
        lblsup = new javax.swing.JLabel();
        cbkale = new javax.swing.JCheckBox();
        cbvb = new javax.swing.JCheckBox();
        cbzinc = new javax.swing.JCheckBox();
        btnadd = new javax.swing.JButton();
        btnupdate = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        btnexit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        lblsearch = new javax.swing.JLabel();
        txtsearch = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtcomment = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtcomment2 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 24)); // NOI18N
        jLabel1.setText("Pet Food Recipe");

        lblpname.setText("Pet Name:");

        lblage.setText("Pet Age:");

        lblptype.setText("Pet Type:");

        lblmeat.setText("Muscle Meat:");

        lblbone.setText("Raw Bone:");

        lblliver.setText("Liver:");

        lblorgan.setText("Secreting Organs:");

        lblveg.setText("Vegetables:");

        lblseed.setText("Seeds or Nuts:");

        lblfruit.setText("Fruit:");

        buttonGroup1.add(rdbdog);
        rdbdog.setText("Dog");

        buttonGroup1.add(rdbcat);
        rdbcat.setText("Cat");

        lblsup.setText("Supplement:");

        cbkale.setText("Kale");

        cbvb.setText("Vitamin B");

        cbzinc.setText("Zinc");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblsup)
                    .addComponent(lblfruit)
                    .addComponent(lblseed)
                    .addComponent(lblveg)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(31, 31, 31)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lblpname)
                                .addComponent(lblmeat)
                                .addComponent(lblage)
                                .addComponent(lblptype)
                                .addComponent(lblbone)
                                .addComponent(lblliver)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(lblorgan))))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtpname)
                        .addComponent(txtage)
                        .addComponent(txtmeat)
                        .addComponent(txtbone)
                        .addComponent(txtliver)
                        .addComponent(txtorgan)
                        .addComponent(txtveg)
                        .addComponent(txtseed)
                        .addComponent(txtfruit)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(rdbdog, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(rdbcat, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(cbkale)
                        .addGap(8, 8, 8)
                        .addComponent(cbvb)
                        .addGap(18, 18, 18)
                        .addComponent(cbzinc)))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblpname)
                    .addComponent(txtpname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblage)
                    .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblptype)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdbdog)
                        .addComponent(rdbcat)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblmeat)
                    .addComponent(txtmeat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblbone)
                    .addComponent(txtbone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblliver)
                    .addComponent(txtliver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblorgan)
                    .addComponent(txtorgan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblveg)
                    .addComponent(txtveg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblseed)
                    .addComponent(txtseed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblfruit)
                    .addComponent(txtfruit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsup)
                    .addComponent(cbkale)
                    .addComponent(cbvb)
                    .addComponent(cbzinc))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        btnadd.setText("Upload");
        btnadd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddActionPerformed(evt);
            }
        });

        btnupdate.setText("Edit");
        btnupdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnupdateActionPerformed(evt);
            }
        });

        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        btnexit.setText("Exit");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Recipe No", "Pet Name", "Pet Age", "Pet Type", "Muscle Meat", "Raw Bone", "Liver", "Other Organs", "Vegetables", "Seeds", "Fruit", "Supplement", "Comment1", "Comment2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        lblsearch.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        lblsearch.setText("Search:");

        txtsearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtsearchKeyReleased(evt);
            }
        });

        jLabel2.setText("Org1 Comment:");

        txtcomment.addFocusListener(new JTextFieldHintListener(txtcomment, "Review Pending..."));

        jLabel3.setText("Org2 Comment:");

        txtcomment2.addFocusListener(new JTextFieldHintListener(txtcomment2, "Review Pending..."));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblsearch)
                        .addGap(26, 26, 26)
                        .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, 554, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 924, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(211, 211, 211)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtcomment, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
                            .addComponent(txtcomment2))))
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(btnadd)
                        .addGap(44, 44, 44)
                        .addComponent(btnupdate)
                        .addGap(47, 47, 47)
                        .addComponent(btndelete)
                        .addGap(41, 41, 41)
                        .addComponent(btnexit))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(477, 477, 477)
                        .addComponent(jLabel1)))
                .addContainerGap(746, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnadd)
                            .addComponent(btnupdate)
                            .addComponent(btndelete)
                            .addComponent(btnexit))
                        .addGap(24, 24, 24))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblsearch)
                            .addComponent(txtsearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtcomment, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtcomment2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    String ptype;
    String supplement="";

    private void btnaddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddActionPerformed
        // TODO add your handling code here:
        
         if("".equals(txtpname.getText().trim())){
        
            JOptionPane.showMessageDialog(this, "Please input the pet name");
        
        }
         else if("".equals(txtage.getText().trim())){
                
                 JOptionPane.showMessageDialog(this, "Please input the pet age");
                
                }
        else if(rdbdog.isSelected()==false&&rdbcat.isSelected()==false){
        
            JOptionPane.showMessageDialog(this, "Please select the pet type");
        
        }
        else if("".equals(txtmeat.getText().trim())){
                
                 JOptionPane.showMessageDialog(this, "Please input the muscle meat");
                
                }
        else if("".equals(txtbone.getText().trim())){
            JOptionPane.showMessageDialog(this, "Please input the raw bone");
        }
        else if("".equals(txtliver.getText().trim())){
                
                 JOptionPane.showMessageDialog(this, "Please input the liver");
                
                }
        else if("".equals(txtorgan.getText().trim())){
                
                 JOptionPane.showMessageDialog(this, "Please input the secreting organs");
                
                }
        else if("".equals(txtveg.getText().trim())){
                
                 JOptionPane.showMessageDialog(this, "Please input the vegtables");
                
                }
        
        else if("".equals(txtseed.getText().trim())){
        
            JOptionPane.showMessageDialog(this, "Please input the seeds or nuts");
        
        }
         else if("".equals(txtfruit.getText().trim())){
        
            JOptionPane.showMessageDialog(this, "Please input the fruit");
        
        }
         else if(cbkale.isSelected()==false&&cbvb.isSelected()==false&&cbzinc.isSelected()==false){
                
                 JOptionPane.showMessageDialog(this, "Please select the supplement");
                
                }

         else{
        try {
        String pname = txtpname.getText();
        int page = Integer.parseInt(txtage.getText());
        
        
        if(rdbdog.isSelected())
        {
            ptype="Dog";
        }
        else if(rdbcat.isSelected())
        {
            ptype="Cat";
        }
        
        String meat = txtmeat.getText();
        String bone = txtbone.getText();
        String liver = txtliver.getText();
        String organ = txtorgan.getText();
        String veg = txtveg.getText();
        String seed = txtseed.getText();
        String fruit = txtfruit.getText();
        
        
        if(cbkale.isSelected())
        {
            supplement+=cbkale.getText()+" ";
        }
        else if(cbvb.isSelected())
        {
            supplement+=cbvb.getText()+" ";
        }
        else if(cbzinc.isSelected())
        {
            supplement+=cbzinc.getText()+" ";
        }
            pst = con.prepareStatement("insert into recipe (pname,page,ptype,meat,bone,liver,organ,veg,seed,fruit,supplement)values(?,?,?,?,?,?,?,?,?,?,?)");
            
            pst.setString(1, pname);
            pst.setInt(2, page);
            pst.setString(3, ptype);
            pst.setString(4, meat);
            pst.setString(5, bone);
            pst.setString(6, liver);
            pst.setString(7, organ);
            pst.setString(8, veg);
            pst.setString(9, seed);
            pst.setString(10, fruit);
            pst.setString(11, supplement);
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Upload Successfully!");
            
            txtpname.setText("");
            txtage.setText("");
            buttonGroup1.clearSelection();
            txtmeat.setText("");
            txtbone.setText("");
            txtliver.setText("");
            txtorgan.setText("");
            txtveg.setText("");
            txtseed.setText("");
            txtfruit.setText("");
            cbkale.setSelected(false);
            cbvb.setSelected(false);
            cbzinc.setSelected(false);            
            txtpname.requestFocus();
            
            recipe_table ();

            
        } catch (SQLException ex) {
            Logger.getLogger(UserRecipe.class.getName()).log(Level.SEVERE, null, ex);
        }
         }    
        
    }//GEN-LAST:event_btnaddActionPerformed

    private void btnupdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnupdateActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        
        
        String pname = txtpname.getText();
        int page = Integer.parseInt(txtage.getText());
        
        
        if(rdbdog.isSelected())
        {
            ptype="Dog";
        }
        else if(rdbcat.isSelected())
        {
            ptype="Cat";
        }
        
        String meat = txtmeat.getText();
        String bone = txtbone.getText();
        String liver = txtliver.getText();
        String organ = txtorgan.getText();
        String veg = txtveg.getText();
        String seed = txtseed.getText();
        String fruit = txtfruit.getText();
        
        
        if(cbkale.isSelected())
        {
            supplement+=cbkale.getText()+" ";
        }
        if(cbvb.isSelected())
        {
            supplement+=cbvb.getText()+" ";
        }
        if(cbzinc.isSelected())
        {
            supplement+=cbzinc.getText()+" ";
        }
        
        try {
            pst = con.prepareStatement("update recipe set pname = ?, page = ?, ptype = ?, meat = ?, bone = ?, liver = ?, organ = ?, veg = ?, seed=?, fruit = ?, supplement = ? where recipeno= ?");
            
            int recipeno = Integer.parseInt(model.getValueAt(SelectIndex, 0).toString());
            
            pst.setString(1, pname);
            pst.setInt(2, page);
            pst.setString(3, ptype);
            pst.setString(4, meat);
            pst.setString(5, bone);
            pst.setString(6, liver);
            pst.setString(7, organ);
            pst.setString(8, veg);
            pst.setString(9, seed);
            pst.setString(10, fruit);
            pst.setString(11, supplement);
            pst.setInt(12, recipeno);
            
            
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Recipe Updated!");
            
            txtpname.setText("");
            txtage.setText("");
            buttonGroup1.clearSelection();
            txtmeat.setText("");
            txtbone.setText("");
            txtliver.setText("");
            txtorgan.setText("");
            txtveg.setText("");
            txtseed.setText("");
            txtfruit.setText("");
            cbkale.setSelected(false);
            cbvb.setSelected(false);
            cbzinc.setSelected(false);            
            txtpname.requestFocus();
            
            recipe_table ();
            btnadd.setEnabled(true);
            
     
        } catch (SQLException ex) {
            Logger.getLogger(UserRecipe.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnupdateActionPerformed

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:
        
        int opt = JOptionPane.showConfirmDialog(null, "Are you sure to delete it ?", "Delete",JOptionPane.YES_NO_OPTION);
        
        if (opt==0){
            
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        
        try {
            int recipeno = Integer.parseInt(model.getValueAt(SelectIndex, 0).toString());
            
            pst = con.prepareStatement("delete from recipe where recipeno = ?");
            
            pst.setInt(1, recipeno);
            pst.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Recipe Deleted!");
            
            txtpname.setText("");
            txtage.setText("");
            buttonGroup1.clearSelection();
            txtmeat.setText("");
            txtbone.setText("");
            txtliver.setText("");
            txtorgan.setText("");
            txtveg.setText("");
            txtseed.setText("");
            txtfruit.setText("");
            cbkale.setSelected(false);
            cbvb.setSelected(false);
            cbzinc.setSelected(false);            
            txtpname.requestFocus();
            
            recipe_table ();
            btnadd.setEnabled(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(UserRecipe.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        }
        
        
    }//GEN-LAST:event_btndeleteActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        int SelectIndex = jTable1.getSelectedRow();
        
        txtpname.setText(model.getValueAt(SelectIndex, 1).toString());
        txtage.setText(model.getValueAt(SelectIndex, 2).toString());
        
        String ptype = model.getValueAt(SelectIndex, 3).toString();
        if (ptype.equals("Dog")){

            rdbdog.setSelected(true);

        }
        else{

            rdbcat.setSelected(true);

        }
        
        txtmeat.setText(model.getValueAt(SelectIndex, 4).toString());
        txtbone.setText(model.getValueAt(SelectIndex, 5).toString());
        txtliver.setText(model.getValueAt(SelectIndex, 6).toString());
        txtorgan.setText(model.getValueAt(SelectIndex, 7).toString());
        txtveg.setText(model.getValueAt(SelectIndex, 8).toString());
        txtseed.setText(model.getValueAt(SelectIndex, 9).toString());
        txtfruit.setText(model.getValueAt(SelectIndex, 10).toString());
        
        String supplement1 = model.getValueAt(SelectIndex, 11).toString();
            switch(supplement1){
                
                case "Kale " :
                    cbkale.setSelected(true);
                    cbvb.setSelected(false);
                    cbzinc.setSelected(false);
                    break;
                    
                case "Vitamin B " :
                    cbkale.setSelected(false);
                    cbvb.setSelected(true);
                    cbzinc.setSelected(false);
                    break;
                
                case "Zinc " :
                    cbkale.setSelected(false);
                    cbvb.setSelected(false);
                    cbzinc.setSelected(true);
                    break;
                    
                case "Kale Vitamin B " :
                    cbkale.setSelected(true);
                    cbvb.setSelected(true);
                    cbzinc.setSelected(false);
                    break;
                    
                case "Kale Zinc " :
                    cbkale.setSelected(true);
                    cbvb.setSelected(false);
                    cbzinc.setSelected(true);
                    break;
                    
                case "Vitamin B Zinc " :
                    cbkale.setSelected(false);
                    cbvb.setSelected(true);
                    cbzinc.setSelected(true);
                    break;
                    
                default :
                    cbkale.setSelected(true);
                    cbvb.setSelected(true);
                    cbzinc.setSelected(true);
                    break;

            }
            
            txtcomment.setText(model.getValueAt(SelectIndex, 12).toString());
            txtcomment2.setText(model.getValueAt(SelectIndex, 13).toString());
            

        btnadd.setEnabled(false);
        

        
    }//GEN-LAST:event_jTable1MouseClicked

    private void txtsearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtsearchKeyReleased
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(txtsearch.getText()));
        
    }//GEN-LAST:event_txtsearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRecipe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRecipe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnadd;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnupdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbkale;
    private javax.swing.JCheckBox cbvb;
    private javax.swing.JCheckBox cbzinc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblage;
    private javax.swing.JLabel lblbone;
    private javax.swing.JLabel lblfruit;
    private javax.swing.JLabel lblliver;
    private javax.swing.JLabel lblmeat;
    private javax.swing.JLabel lblorgan;
    private javax.swing.JLabel lblpname;
    private javax.swing.JLabel lblptype;
    private javax.swing.JLabel lblsearch;
    private javax.swing.JLabel lblseed;
    private javax.swing.JLabel lblsup;
    private javax.swing.JLabel lblveg;
    private javax.swing.JRadioButton rdbcat;
    private javax.swing.JRadioButton rdbdog;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtbone;
    private javax.swing.JTextField txtcomment;
    private javax.swing.JTextField txtcomment2;
    private javax.swing.JTextField txtfruit;
    private javax.swing.JTextField txtliver;
    private javax.swing.JTextField txtmeat;
    private javax.swing.JTextField txtorgan;
    private javax.swing.JTextField txtpname;
    private javax.swing.JTextField txtsearch;
    private javax.swing.JTextField txtseed;
    private javax.swing.JTextField txtveg;
    // End of variables declaration//GEN-END:variables
}
